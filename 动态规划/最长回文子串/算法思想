//动态规划求解最长回文子串
//因为一个回文子串去掉两头后剩下的依然是回文串，得状态转移方程dp[i][j]=dp[i+1][j-1]∩s[i][j];
//当子串长度小于等于2时，得边界条件dp[i][i]=true或dp[i][i+1]=true(s[i]==s[i+1])
//时间复杂度O(n^2),空间复杂度O(n^2)
